{"version":3,"sources":["firebaseInstance.ts","routes/Profile.tsx","components/AuthForm.tsx","routes/Auth.tsx","components/Nweet.tsx","components/NweetFactory.tsx","routes/Home.tsx","components/Navigation.tsx","components/AppRouter.tsx","components/App.tsx","index.tsx"],"names":["authService","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","GoogleAuthProvider","GithubAuthProvider","createUserWithEmailAndPassword","signInWithEmailAndPassword","onAuthStateChanged","signInWithPopup","signOut","updateProfile","dbService","db","getFirestore","collection","addDoc","getDocs","onSnapshot","deleteDoc","doc","updateDoc","query","where","orderBy","storageService","storage","getStorage","ref","uploadString","getDownloadURL","deleteObject","Profile","userObj","refreshUser","navigate","useNavigate","getMyNweets","a","q","uid","querySnapshot","nweets","docs","map","data","console","log","useEffect","handleSubmit","event","preventDefault","formElement","target","formData","FormData","Object","fromEntries","name","currentUser","displayName","onSubmit","type","placeholder","onClick","replace","AuthForm","useState","newAccount","setNewAccount","error","setError","email","password","message","required","v","Auth","handleSocialClick","currentTarget","providerMap","google","github","provider","Nweet","nweet","isOwner","editing","setEditing","toggleEditing","contents","id","attachmentUrl","src","width","height","alt","window","confirm","fileRef","NweetFactory","attachment","setAttachment","uuidv4","fileSnapshot","creatorId","createdAt","Date","now","reset","maxLength","accept","onChange","files","file","fileReader","FileReader","onloadend","progressEvent","result","readAsDataURL","undefined","Home","setNweets","snapshot","nweetArray","Navigation","to","AppRouter","path","index","element","App","init","setInit","setUserObj","firebaseUser","user","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f042d5b1.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from 'firebase/app';\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\nimport {\n  getAuth,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  onAuthStateChanged,\n  signInWithPopup,\n  GoogleAuthProvider,\n  GithubAuthProvider,\n  signOut,\n  updateProfile,\n} from 'firebase/auth';\nimport { getFirestore, collection, addDoc, getDocs, onSnapshot, deleteDoc, doc, updateDoc, query, where, orderBy } from 'firebase/firestore';\nimport { getStorage, ref, uploadString, getDownloadURL, deleteObject } from 'firebase/storage';\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\nexport const authService = {\n  auth: getAuth(),\n  GoogleAuthProvider,\n  GithubAuthProvider,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  onAuthStateChanged,\n  signInWithPopup,\n  signOut,\n  updateProfile,\n};\n\nexport const dbService = {\n  db: getFirestore(),\n  collection,\n  addDoc,\n  getDocs,\n  onSnapshot,\n  deleteDoc,\n  doc,\n  updateDoc,\n  query,\n  where,\n  orderBy,\n};\n\nexport const storageService = {\n  storage: getStorage(),\n  ref, // bucket과 동일\n  uploadString,\n  getDownloadURL,\n  deleteObject,\n};\n\nexport default app;\n","import React, { useEffect, useState } from 'react';\n\nimport { useNavigate } from 'react-router-dom';\nimport { authService, dbService } from 'firebaseInstance';\n\ntype Props = {\n  userObj: User,\n  refreshUser: () => void,\n};\n\nfunction Profile({\n  userObj,\n  refreshUser,\n}: Props) {\n  let navigate = useNavigate();\n  \n  const getMyNweets = async () => {\n    const q = dbService.query(dbService.collection(dbService.db, 'nweets'), dbService.where('creatorId', '==', userObj.uid), dbService.orderBy('createdAt', 'desc'));\n\n    const querySnapshot = await dbService.getDocs(q);\n    const nweets = querySnapshot.docs.map(doc => doc.data());\n    console.log(nweets);\n  };\n\n  useEffect(() => {\n    getMyNweets();\n  }, []);\n\n  const handleClick = () => {\n    authService.signOut(authService.auth);\n    navigate('/', { replace: true });\n  }\n\n  const handleSubmit = async (event: React.SyntheticEvent) => {\n    event.preventDefault();\n\n    const formElement = event.target as HTMLFormElement;\n    const formData = new FormData(formElement);\n    const { name } = Object.fromEntries(formData);\n\n    if (!authService.auth.currentUser) {\n      return;\n    }\n\n    await authService.updateProfile(authService.auth.currentUser, {\n      displayName: name as string,\n    });\n\n    refreshUser();\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"name\" placeholder=\"Display name\" />\n        <button type=\"submit\">Update Profile</button>\n      </form>\n      <button onClick={handleClick}>Log Out</button>\n    </div>\n  );\n};\nexport default Profile;","import React, { useState } from 'react';\n\nimport { authService } from 'firebaseInstance';\n\ntype Props = {\n\n};\n\nfunction AuthForm({}: Props) {\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState('');\n\n  const toggleAccount = () => {\n    setNewAccount(v => !v);\n  }\n\n  const handleSubmit = async (event: React.SyntheticEvent) => {\n    event.preventDefault();\n\n    const formData = new FormData(event.target as HTMLFormElement);\n    const { email, password } = Object.fromEntries(formData);\n\n    try {\n      let data;\n      if (newAccount) {\n        data = await authService.createUserWithEmailAndPassword(\n          authService.auth,\n          email as string,\n          password as string,\n        );\n      } else {\n        data = await authService.createUserWithEmailAndPassword(\n          authService.auth,\n          email as string,\n          password as string,\n        );\n      }\n      console.log(data);\n    } catch (err: any) {\n      setError(err.message as string);\n    }\n    \n  }\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input name=\"email\" type=\"email\" placeholder=\"Email\" required />\n        <input name=\"password\" type=\"password\" placeholder=\"Password\" required />\n        <span>{error}</span>\n        <button type=\"submit\">{newAccount ? 'Create Acccount' : 'Log In'}</button>\n      </form>\n      <span onClick={toggleAccount}>{newAccount ? 'Sign In' : 'Create Account'}</span>\n    </>\n  );\n};\n\nexport default AuthForm;","import React, { useState } from 'react';\n\nimport { authService } from 'firebaseInstance';\nimport AuthForm from 'components/AuthForm';\n\nfunction Auth() {\n \n  const handleSocialClick = async (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n\n    const { name } = event.currentTarget;\n\n    const providerMap: { [key: string]: typeof authService.GoogleAuthProvider | typeof authService.GithubAuthProvider } = {\n      google: authService.GoogleAuthProvider,\n      github: authService.GithubAuthProvider,\n    };\n\n    const provider = new providerMap[name]();\n\n    await authService.signInWithPopup(authService.auth, provider);\n  }\n\n  \n  return (\n    <div>\n      <AuthForm />\n      <div>\n        <button name=\"google\" onClick={handleSocialClick}>Continue with Goole</button>\n        <button name=\"github\" onClick={handleSocialClick}>Continue with Github</button>\n      </div>\n    </div>\n  );\n};\nexport default Auth;","import React, { useState } from 'react';\n\nimport { dbService, storageService } from 'firebaseInstance';\n\ntype Props = {\n  nweet: Nweet,\n  isOwner: boolean,\n};\n\nfunction Nweet({\n  nweet,\n  isOwner,\n}: Props) {\n  const [editing, setEditing] = useState(false);\n\n  const toggleEditing = () => {\n    setEditing(v => !v);\n  }\n\n  const handleSubmit = async (event: React.SyntheticEvent) => {\n    event.preventDefault();\n\n    const formElement = event.target as HTMLFormElement;\n    const formData = new FormData(formElement);\n    const { contents } = Object.fromEntries(formData);\n\n    \n\n    // Set the \"capital\" field of the city 'DC'\n    await dbService.updateDoc(dbService.doc(dbService.db, 'nweets', nweet.id), {\n      contents,\n    });\n\n    toggleEditing();\n  };\n\n  const handleDeleteClick = () => {\n    const ok = window.confirm('Are you sure?');\n\n    if (ok) {\n      // delete\n      dbService.deleteDoc(\n        dbService.doc(\n          dbService.db,\n          'nweets',\n          nweet.id,\n        )\n      );\n\n      const fileRef = storageService.ref(storageService.storage, nweet.attachmentUrl);\n      storageService.deleteObject(fileRef);\n    }\n  };\n\n  return (\n    <div>\n      {editing ? (\n        <form onSubmit={handleSubmit}>\n          <input type=\"text\" name=\"contents\" />\n          <button type=\"submit\">Edit</button>\n        </form>\n      ) : (\n        <>\n          <h4>{nweet.contents}</h4>\n          {nweet.attachmentUrl && (\n            <img src={nweet.attachmentUrl} width={100} height={100} alt=\"nweet-img\" />\n          )}\n          {isOwner && (\n            <>\n              <button onClick={toggleEditing}>Edit</button>\n              <button onClick={handleDeleteClick}>Delete</button>\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default Nweet;","import React, { useState } from 'react';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { dbService, storageService } from '../firebaseInstance';\n\n\ntype Props = {\n  userObj: User,\n};\n\nfunction NweetFactory({\n  userObj,\n}: Props) {\n  const [attachment, setAttachment] = useState<{ type: string, data: string }>();\n  const handleSubmit = async (event: React.SyntheticEvent) => {\n    event.preventDefault();\n\n    const formElement = event.target as HTMLFormElement;\n    const formData = new FormData(formElement);\n    console.log(Object.fromEntries(formData));\n    const { contents } = Object.fromEntries(formData);\n    let attachmentUrl: string | undefined;\n\n    const fileRef = storageService.ref(storageService.storage, `${userObj.uid}/${uuidv4()}`);\n    if (attachment) {\n      const fileSnapshot = await storageService.uploadString(fileRef, attachment.data, 'data_url');\n      console.log(fileSnapshot);\n      attachmentUrl = await storageService.getDownloadURL(fileSnapshot.ref);\n    }\n    \n    const docRef = await dbService.addDoc(\n      dbService.collection(dbService.db, 'nweets'), \n      {\n        creatorId: userObj.uid,\n        contents,\n        createdAt: Date.now(),\n        attachmentUrl,\n      }\n    );\n\n    formElement.reset();\n  }\n\n  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { target: { files }} = event;\n    if (!files) {\n      return;\n    }\n\n    const file = files[0];\n    const fileReader = new FileReader();\n    fileReader.onloadend = (progressEvent) => {\n      if (!progressEvent.target) {\n        return;\n      }\n      const { result } = progressEvent.target;\n      setAttachment({\n        type: file.type,\n        data: result as string,\n      });\n      \n    };\n    fileReader.readAsDataURL(file);\n\n    // 아래와 같이 하는 것도 가능\n    // URL.createObjectURL(file);\n  };\n\n  const clearAttachment = (event: React.SyntheticEvent) => {\n    event.preventDefault();\n    setAttachment(undefined);\n  }\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" name=\"contents\" maxLength={120} placeholder=\"What's on your mind?\" />\n      <input type=\"file\" accept=\"image/*\" onChange={handleFileChange} />\n      <button type=\"submit\">Nweet</button>\n      {attachment && (\n        <div>\n          <img src={attachment.data} width={100} height={100} alt=\"preview\" />\n          <button type=\"button\" onClick={clearAttachment}>Clear</button>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default NweetFactory;","import Nweet from 'components/Nweet';\nimport React, { useEffect, useState } from 'react';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { dbService } from '../firebaseInstance';\n\nimport NweetFactory from 'components/NweetFactory';\n\ntype Props = {\n  userObj: User,\n}\n\nfunction Home({\n  userObj,\n}: Props) {\n  const [nweets, setNweets] = useState<Array<Nweet>>([]);\n  \n\n  useEffect(() => {\n    dbService.onSnapshot(dbService.collection(dbService.db, 'nweets'), (snapshot) => {\n      const nweetArray = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data(),\n      })) as Array<Nweet>;\n      \n      setNweets(nweetArray);\n      console.log(snapshot.docs);\n    });\n  }, []);\n\n\n  return (\n    <div>\n      <NweetFactory userObj={userObj} />\n      <div>\n        {nweets.map(nweet => (\n          <Nweet key={nweet.id} nweet={nweet} isOwner={nweet.creatorId === userObj.uid} />\n        ))}\n      </div>\n    </div>\n  );\n};\nexport default Home;","import React, { useState } from 'react';\nimport { HashRouter, Link, Route, Routes } from 'react-router-dom';\n\ntype Props = {\n  userObj: User | null,\n}\n\nfunction Navigation({\n  userObj,\n}: Props) {\n  return (\n    <ul>\n      <li>\n        <Link to=\"/\">Home</Link>\n      </li>\n      <li>\n        <Link to=\"/profile\">{userObj?.displayName || '나'}의 Profile</Link>\n      </li>\n    </ul>\n  );\n};\n\nexport default Navigation;","import React, { useState } from 'react';\nimport { HashRouter, Route, Routes } from 'react-router-dom';\nimport Profile from 'routes/Profile';\nimport Auth from 'routes/Auth';\nimport Home from 'routes/Home';\n\nimport Navigation from 'components/Navigation';\n\ntype Props = {\n  userObj: User | null,\n  refreshUser: () => void,\n}\n\nfunction AppRouter({\n  userObj,\n  refreshUser,\n}: Props) {\n  return (\n    <HashRouter>\n      <Navigation userObj={userObj} />\n      <Routes>\n        <Route path=\"/\">\n        {userObj ? (\n          <>\n            <Route index element={<Home userObj={userObj} />} />\n            <Route path=\"/profile\" element={<Profile userObj={userObj} refreshUser={refreshUser} />} />\n          </>\n        ) : (\n          <>\n            <Route index element={<Auth />} />\n          </>\n        )}\n        </Route>\n      </Routes>\n    </HashRouter>\n  );\n};\n\nexport default AppRouter;","import React, { useEffect, useState } from 'react';\n\nimport AppRouter from 'components/AppRouter';\n\nimport { authService } from 'firebaseInstance';\nimport { reauthenticateWithRedirect } from 'firebase/auth';\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState<User | null>(null);\n\n  useEffect(() => {\n    const unsubscribe = authService.onAuthStateChanged(authService.auth, (firebaseUser) => {\n      if (!firebaseUser) {\n        return setUserObj(null);\n      }\n\n      const user: User = {\n        uid: firebaseUser.uid,\n        displayName: firebaseUser.displayName,\n      };\n\n      setUserObj(user);\n      setInit(true);\n    });\n    return unsubscribe;\n  }, []);\n\n  const refreshUser = () => {\n    if (!authService.auth.currentUser) {\n      return;\n    }\n\n    const user: User = {\n      uid: authService.auth.currentUser.uid,\n      displayName: authService.auth.currentUser.displayName,\n    };\n\n    setUserObj(user);\n  };\n\n  if (!init) {\n    return <span>Initalizing..</span>;\n  }\n\n  return (\n    <>\n      <AppRouter userObj={userObj} refreshUser={refreshUser} />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport firebase from 'firebaseInstance';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}